# Generated by Django 4.2.3 on 2023-07-12 11:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("recipes", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="shoppingcart",
            name="user",
            field=models.ForeignKey(
                help_text="Список покупок пользователя",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="shopping_cart",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Список покупок",
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="author",
            field=models.ForeignKey(
                help_text="Укажите автора рецепта",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="recipes",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Автор рецепта",
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="ingredients",
            field=models.ManyToManyField(
                help_text="Перечислите ингредиенты",
                through="recipes.IngredientsInRecipe",
                to="recipes.ingredient",
                verbose_name="Ингредиенты",
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="tags",
            field=models.ManyToManyField(
                db_index=True,
                help_text="Выберите теги",
                related_name="recipes",
                to="recipes.tag",
                verbose_name="Теги",
            ),
        ),
        migrations.AddField(
            model_name="ingredientsinrecipe",
            name="ingredient",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ingredients_list",
                to="recipes.ingredient",
                verbose_name="Рецепты",
            ),
        ),
        migrations.AddField(
            model_name="ingredientsinrecipe",
            name="recipe",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ingredient_in_recipe",
                to="recipes.recipe",
                verbose_name="Ингредиенты",
            ),
        ),
        migrations.AddField(
            model_name="favorite",
            name="recipe",
            field=models.ForeignKey(
                help_text="Избранные рецепты у пользователей",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="users_favorites",
                to="recipes.recipe",
                verbose_name="Избранные рецепты у пользователей",
            ),
        ),
        migrations.AddField(
            model_name="favorite",
            name="user",
            field=models.ForeignKey(
                help_text="Избранные рецепты пользователя",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="favorites",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Избранные рецепты",
            ),
        ),
        migrations.AddConstraint(
            model_name="shoppingcart",
            constraint=models.UniqueConstraint(
                fields=("user", "recipe"), name="unique_recipe"
            ),
        ),
        migrations.AddConstraint(
            model_name="recipe",
            constraint=models.UniqueConstraint(
                fields=("author", "name"), name="unique_author_name"
            ),
        ),
        migrations.AddConstraint(
            model_name="ingredientsinrecipe",
            constraint=models.UniqueConstraint(
                fields=("ingredient", "recipe"), name="unique_ingredient"
            ),
        ),
        migrations.AddConstraint(
            model_name="favorite",
            constraint=models.UniqueConstraint(
                fields=("user", "recipe"), name="unique_favorite"
            ),
        ),
    ]
